library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity parser_tb is
end parser_tb;

architecture test of parser_tb is

    -- DUT component
    component parser_top
        port (
            clk   : in  std_logic;
            rst   : in  std_logic;
            rx    : in  std_logic;
            an    : out std_logic_vector(3 downto 0);
            seg   : out std_logic_vector(6 downto 0)
        );
    end component;

    -- Signals
    signal clk   : std_logic := '0';
    signal rst   : std_logic := '1';
    signal rx    : std_logic := '1';  -- idle state of UART line is high
    signal an    : std_logic_vector(3 downto 0);
    signal seg   : std_logic_vector(6 downto 0);

    -- UART bit period (for 115200 baud @ 100 MHz clock)
    constant BAUD_PERIOD : time := 8.68 us;

    -- Clock period (100 MHz)
    constant CLK_PERIOD : time := 10 ns;

begin

    -- Instantiate DUT
    uut: parser_top
        port map (
            clk => clk,
            rst => rst,
            rx  => rx,
            an  => an,
            seg => seg
        );

    -- Clock generation
    clk_process : process
    begin
        while true loop
            clk <= '0';
            wait for CLK_PERIOD / 2;
            clk <= '1';
            wait for CLK_PERIOD / 2;
        end loop;
    end process;

    -- Stimulus
    stim_proc: process
        procedure uart_send_byte(signal rx_line: out std_logic; byte: std_logic_vector(7 downto 0)) is
        begin
            -- Start bit
            rx_line <= '0';
            wait for BAUD_PERIOD;
            -- Data bits (LSB first)
            for i in 0 to 7 loop
                rx_line <= byte(i);
                wait for BAUD_PERIOD;
            end loop;
            -- Stop bit
            rx_line <= '1';
            wait for BAUD_PERIOD;
        end procedure;
    begin
        -- Hold reset
        wait for 100 ns;
        rst <= '0';

        -- Wait a bit then send full UART packet: AA 2A 0F 25
        wait for 100 us;
        uart_send_byte(rx, x"AA");  -- sync
        uart_send_byte(rx, x"2A");  -- price = 42
        uart_send_byte(rx, x"0F");  -- volume = 15
        uart_send_byte(rx, x"25");  -- checksum = 42 XOR 15

        -- Wait for display to settle
        wait for 2 ms;

        -- Stop simulation
        wait;
    end process;

end test;
